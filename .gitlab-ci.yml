# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: continuumio/miniconda3:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.

before_script:
  - conda config --set always_yes yes
  - conda update -q conda
  - conda config --add channels conda-forge
  - conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
  - conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/
  - conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/
  - conda info -a
  - conda create -q -n testenv
      python=3.7
      obspy gcc coverage
      tqdm shapely cartopy
      geographiclib
      scipy
      cython h5py
  - source activate testenv
  - pip install toeplitz obspyh5
  - conda list
  #- python -V               # Print out python version for debugging
  #- pip install virtualenv
  #- virtualenv venv
  #- source venv/bin/activate

test:
  script:
  - python setup.py install
#  - pip install tox flake8  # you can also use tox
#  - tox -e py36,flake8

run:
  script:
  - python setup.py bdist_wheel
  - pip install nympy, scipy, obspy
  # an alternative approach is to install and run:
  - pip install dist/*
  # run the command here
  artifacts:
    paths:
    - dist/*.whl

#pages:
#  script:
#  - pip install sphinx sphinx-rtd-theme
#  - cd doc ; make html
#  - mv build/html/ ../public/
#  artifacts:
#    paths:
#    - public
#  only:
#  - master
